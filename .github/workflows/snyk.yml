name: build
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
    
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/yuva19102003/golang-webserver:${{ github.sha }} .
          
      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: yuva19102003/golang-webserver:${{ github.sha }}
          args: --sarif-file-output=snyk.sarif >>snyk.txt
        
      - name: Count total number of vulnerabilities
        run: |
          RESULTS_LENGTH=$(jq '.runs[0].results | length' snyk.sarif)
          echo "RESULTS_LENGTH=$RESULTS_LENGTH" >> $GITHUB_ENV
          echo $RESULTS_LENGTH
          
      - name: Pass_or_Fail_the_job
        run: |
            if [ "$RESULTS_LENGTH" != 0 ]; then
                echo "Job Failed"
                exit 1
            else
                echo "Pass"
            fi 
            
      - name: set env for the snyk
        id: read_results
        run: |
          RESULTS=$(cat snyk.txt)
          echo "::set-output name=results::$RESULTS"
          echo $RESULTS

      - name: Send notification on Slack using Webhooks
        uses: slackapi/slack-github-action@v1.24.0
        if: always()
        with:
          payload: |
               {
                 "text": "*The Snyk scan result for repo is : ${{ job.status }}* \n*Number of vulnerabilities : ${{ env.RESULTS_LENGTH }}* \n*Detail*: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\n\n*Scan Results:*\n${{ steps.read_results.outputs.results }}"
               }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.slack_webhook_url }}


          
