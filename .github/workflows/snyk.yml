name: build
on:
  push:
    branches:
      - master
  pull_request:


jobs:

  docker_build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
    
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Read Version
        id: version
        run: |
          version=$(($(cat version.txt)+1))
          echo "New version: $version"
          echo "::set-output name=version::$version"  
        
      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/yuva19102003/golang-webserver:v${{ steps.version.outputs.version }} .


  snyk_scan:
    name: Snyk Scan 
    runs-on: ubuntu-latest
    needs: docker_build
    steps:
    
      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: yuva19102003/golang-webserver:v${{ needs.docker_build.outputs.version }}
          args: --sarif-file-output=snyk.sarif
       
      - name: Count total number of vulnerabilities
        run: |
          RESULTS_LENGTH=$(jq '.runs[0].results | length' snyk.sarif)
          echo "RESULTS_LENGTH=$RESULTS_LENGTH" >> $GITHUB_ENV
          echo $RESULTS_LENGTH
         
      - name: Pass_or_Fail_the_job
        run: |
            if [ "$RESULTS_LENGTH" != 0 ]; then
                echo "Job Failed"
                exit 1
            else
                echo "Pass"
            fi 


  slack_notify:
    name: notify in slack channel
    runs-on: ubuntu-latest
    needs: [docker_build, snyk_scan]
    steps:

      - name: Send notification on Slack using Webhooks
        uses: slackapi/slack-github-action@v1.24.0
        if: always()
        with:
          payload: |
               {
                 "text": "*The Snyk scan result for repo is : ${{ job.status }}* \n*Number of vulnerabilities : ${{ env.RESULTS_LENGTH }}* \n*Detail*: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\n\n"
               }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.slack_webhook_url }}


  
#      - name: Update Version in version.txt
#        run: |
#          echo #$#{{ steps.version.outputs.version }} > version.txt
#          git config user.name "github-actions[bot]"
#          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
#          git add .
#          git commit -m "generated"
#          git push

      
              



          
