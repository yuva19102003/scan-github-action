name: build
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/yuva19102003/golang-webserver:${{ github.sha }} .
      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: yuva19102003/golang-webserver:${{ github.sha }}
          args: --sarif-file-output=snyk.sarif
      - name: Count total number of vulnerabilities
        run: |
          RESULTS_LENGTH=$(jq '.runs[0].results | length' snyk.sarif)
          echo "RESULTS_LENGTH=$RESULTS_LENGTH" >> $GITHUB_ENV
          echo $RESULTS_LENGTH
      - name: Pass_or_Fail_the_job
        run: |
            if [ "$RESULTS_LENGTH" != 0 ]; then
                echo "Job Failed"
                exit 1
            else
                echo "Pass"
            fi
      - name: Parse SARIF Output
        id: parse-sarif-output
        run: |
            # Use a tool like jq to parse SARIF file into JSON format
            JSON_OUTPUT=$(jq -c '.' snyk.sarif)
            echo "::set-output name=json_output::$JSON_OUTPUT"

      - name: Print JSON Output
        run: echo "${{ steps.parse-sarif-output.outputs.json_output }}"

    
